{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clsno\\\\OneDrive\\\\Desktop\\\\Learn React\\\\Flashcards\\\\src\\\\components\\\\AddEditPage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction getDeckOptions(db) {\n  const deck_options = db.getDeckNames().map((deck_name, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: deck_name,\n      children: deck_name\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this);\n  });\n  return deck_options;\n}\nfunction getChapterOptions(db, deckSelection) {\n  const chapter_options = db.getChapterNames(deckSelection).map((chapter_name, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: chapter_name,\n      children: chapter_name\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  });\n  return chapter_options;\n}\nfunction getCardOptions(cards) {\n  const card_options = [];\n  for (let i = 0; i < cards.length; i++) {\n    card_options.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"option\", {\n        value: cards[i],\n        children: [\"Card \", i]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false));\n  }\n}\nfunction PageTitle() {\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Add/Edit\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_c = PageTitle;\nfunction NewDeckArea({\n  onAddDeck\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-button-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onClick: () => {\n          // Get the new deck name from input text\n          const id = document.getElementById('new-deck-name').value;\n          onAddDeck(id);\n        },\n        type: \"button\",\n        className: \"button-style-2\",\n        value: \"Add Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"new-deck-name\",\n      children: \"New Deck Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 66\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"new-deck-name\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 59\n    }, this)]\n  }, void 0, true);\n}\n_c2 = NewDeckArea;\nfunction NewChapterArea({\n  db,\n  onAddChapter\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"new-area\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-button-layout more-margin\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Chapter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onClick: () => {\n          // Get the new chapter name and selected deck\n          const id = document.getElementById(\"new-chapter-name\").value;\n          const target = document.getElementById(\"deck-select-new-chapt\");\n          const deck_name = target.options[target.selectedIndex].text;\n          onAddChapter(deck_name, id);\n        },\n        type: \"button\",\n        className: \"button-style-2\",\n        value: \"Add Chapter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"deck-select\",\n      children: \"Select Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"deck-select-new-chapt\",\n      name: \"deck-select\",\n      children: getDeckOptions(db)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"new-chapter-name\",\n      id: \"new-chapt-name\",\n      children: \"New Chapter Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 92\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"new-chapter-name\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 62\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_c3 = NewChapterArea;\nfunction Content({\n  db\n}) {\n  _s();\n  const [deckSelection, setDeckSelection] = useState(\"Deck 0\");\n  const [deckOptions, setDeckOptions] = useState(db.getDeckNames());\n  const [chapterOptions, setChapterOptions] = useState(db.getChapterNames(deckSelection));\n  function handleDeckSelectEditAdd(selected_deck) {\n    setDeckSelection(selected_deck);\n  }\n  function handleNewDeck(new_deck_name) {\n    // Add the new deck\n    db.addDeck(new_deck_name);\n    // Updating the state will allow select lists to see the update without page refresh\n    setDeckOptions(db.getDeckNames());\n  }\n  function handleNewChapter(deck_name, new_chapter_name) {\n    // Add the new chapter\n    db.addChapter(deck_name, new_chapter_name);\n    // Updating the state will allow select lists to see the update without page refresh\n    setChapterOptions(db.getChapterNames());\n  }\n  function handleNewCard(deck_name, chapter_name, new_card) {\n    // new card must be an object with question, answer properties\n    // db.addCard(deck_name, chapter_name, new_card);\n    console.log(new_card);\n  }\n  function handleEditCard(deck_name, chapter_name, id, edit_card) {\n    // db.editCard(deck_name, chapter_name, id, edit_card[\"question\"], edit_card[\"answer\"]);\n    console.log(id, edit_card);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"new-chapt-deck\",\n      children: [/*#__PURE__*/_jsxDEV(NewDeckArea, {\n        onAddDeck: handleNewDeck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(NewChapterArea, {\n        db: db,\n        onAddChapter: handleNewChapter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddEditCardArea, {\n      db: db,\n      deckSelection: deckSelection,\n      handleDeckSelect: handleDeckSelectEditAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 7\n  }, this);\n}\n_s(Content, \"ez74srXhWg43YkRyd2dVBufcH9g=\");\n_c4 = Content;\nfunction AddEditCardArea({\n  db,\n  deckSelection,\n  handleDeckSelect\n}) {\n  _s2();\n  const [toggleBtn, setToggleBtn] = useState(false); // false => Add Card function\n  const [chapterSelection, setChapterSelection] = useState(\"Chapter 1\");\n  const [cards, setCards] = useState(() => {\n    db.getCards(deckSelection, chapterSelection);\n  });\n  console.log(db.getCards(deckSelection, chapterSelection));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"edit-add\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-button-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        className: \"button-style-2\",\n        value: \"Add Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 92\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"deck-select\",\n        children: \"Select Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: () => {\n          // On deck select change, update the deckSelection state\n          const target = document.getElementById(\"deck-select-edit-add\");\n          handleDeckSelect(target.options[target.selectedIndex].value);\n        },\n        id: \"deck-select-edit-add\",\n        name: \"deck-select\",\n        className: \"select-style\",\n        children: getDeckOptions(db)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"chapter-select\",\n        children: \"Select Chapter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"chapter-select\",\n        className: \"select-style\",\n        children: getChapterOptions(db, deckSelection)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"card-select\",\n        children: \"Select Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"card-select\",\n        className: \"select-style\",\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 0,\n          children: \"Card 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Question:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 40\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Answer:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"answer\",\n      rows: \"5\",\n      cols: \"40\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n}\n_s2(AddEditCardArea, \"aoCTLl9t9r6/SbEgy7r0LSG6e14=\");\n_c5 = AddEditCardArea;\nexport default function AddEdit({\n  db\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTitle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      db: db\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c6 = AddEdit;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"PageTitle\");\n$RefreshReg$(_c2, \"NewDeckArea\");\n$RefreshReg$(_c3, \"NewChapterArea\");\n$RefreshReg$(_c4, \"Content\");\n$RefreshReg$(_c5, \"AddEditCardArea\");\n$RefreshReg$(_c6, \"AddEdit\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","getDeckOptions","db","deck_options","getDeckNames","map","deck_name","index","value","children","fileName","_jsxFileName","lineNumber","columnNumber","getChapterOptions","deckSelection","chapter_options","getChapterNames","chapter_name","getCardOptions","cards","card_options","i","length","push","PageTitle","_c","NewDeckArea","onAddDeck","className","onClick","id","document","getElementById","type","htmlFor","_c2","NewChapterArea","onAddChapter","target","options","selectedIndex","text","name","_c3","Content","_s","setDeckSelection","deckOptions","setDeckOptions","chapterOptions","setChapterOptions","handleDeckSelectEditAdd","selected_deck","handleNewDeck","new_deck_name","addDeck","handleNewChapter","new_chapter_name","addChapter","handleNewCard","new_card","console","log","handleEditCard","edit_card","AddEditCardArea","handleDeckSelect","_c4","_s2","toggleBtn","setToggleBtn","chapterSelection","setChapterSelection","setCards","getCards","onChange","rows","cols","_c5","AddEdit","_c6","$RefreshReg$"],"sources":["C:/Users/clsno/OneDrive/Desktop/Learn React/Flashcards/src/components/AddEditPage.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nfunction getDeckOptions(db) {\r\n    const deck_options = db.getDeckNames().map((deck_name, index) => {\r\n        return (\r\n            <option key={index} value={deck_name}>{deck_name}</option>\r\n        );\r\n    });\r\n\r\n    return deck_options;\r\n}\r\n\r\nfunction getChapterOptions(db, deckSelection) {\r\n    const chapter_options = db.getChapterNames(deckSelection).map((chapter_name, index) => {\r\n        return (\r\n            <option key={index} value={chapter_name}>{chapter_name}</option>\r\n        );\r\n    });\r\n\r\n    return chapter_options;\r\n}\r\n\r\nfunction getCardOptions(cards) {\r\n    const card_options = [];\r\n    for (let i = 0; i < cards.length; i++) {\r\n        card_options.push(\r\n            <>\r\n                <option key={i} value={cards[i]}>Card {i}</option>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction PageTitle() {\r\n    return (\r\n        <h2>Add/Edit</h2>\r\n    );\r\n}\r\n\r\nfunction NewDeckArea({ onAddDeck }) {\r\n    return (\r\n        <>\r\n            <div className='title-button-layout'>\r\n                <h3>Deck</h3>\r\n                <input \r\n                    onClick={() => {\r\n                        // Get the new deck name from input text\r\n                        const id = document.getElementById('new-deck-name').value;\r\n                        onAddDeck(id);\r\n                    }}\r\n                    type='button'\r\n                    className='button-style-2'\r\n                    value={\"Add Deck\"}></input>\r\n            </div>\r\n            <label htmlFor='new-deck-name'>New Deck Name:</label><br />\r\n            <input id='new-deck-name' type='text'></input><br />\r\n        </>\r\n    );\r\n}\r\n\r\nfunction NewChapterArea({ db, onAddChapter }) {\r\n    return (\r\n        <div id='new-area'>\r\n            <div className='title-button-layout more-margin'>\r\n                <h3>Chapter</h3>\r\n                <input\r\n                    onClick={() => {\r\n                        // Get the new chapter name and selected deck\r\n                        const id = document.getElementById(\"new-chapter-name\").value;\r\n                        const target = document.getElementById(\"deck-select-new-chapt\");\r\n                        const deck_name = target.options[target.selectedIndex].text;\r\n                        onAddChapter(deck_name, id);\r\n                    }}\r\n                    type='button'\r\n                    className='button-style-2'\r\n                    value={\"Add Chapter\"}></input>\r\n            </div>\r\n            <label htmlFor='deck-select'>Select Deck</label>\r\n            <select id='deck-select-new-chapt' name='deck-select'>\r\n                {getDeckOptions(db)}\r\n            </select><br />\r\n            <label htmlFor='new-chapter-name' id='new-chapt-name'>New Chapter Name:</label><br />\r\n            <input id='new-chapter-name' type='text'></input><br />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Content({ db }) {\r\n    const [deckSelection, setDeckSelection] = useState(\"Deck 0\");\r\n    const [deckOptions, setDeckOptions] = useState(db.getDeckNames());\r\n    const [chapterOptions, setChapterOptions] = useState(db.getChapterNames(deckSelection));\r\n\r\n    function handleDeckSelectEditAdd(selected_deck) {\r\n        setDeckSelection(selected_deck);\r\n    }\r\n\r\n    function handleNewDeck(new_deck_name) {\r\n        // Add the new deck\r\n        db.addDeck(new_deck_name);\r\n        // Updating the state will allow select lists to see the update without page refresh\r\n        setDeckOptions(db.getDeckNames());\r\n    }\r\n\r\n    function handleNewChapter(deck_name, new_chapter_name) {\r\n        // Add the new chapter\r\n        db.addChapter(deck_name, new_chapter_name);\r\n        // Updating the state will allow select lists to see the update without page refresh\r\n        setChapterOptions(db.getChapterNames());\r\n    }\r\n\r\n    function handleNewCard(deck_name, chapter_name, new_card) {\r\n        // new card must be an object with question, answer properties\r\n        // db.addCard(deck_name, chapter_name, new_card);\r\n        console.log(new_card);\r\n    }\r\n\r\n    function handleEditCard(deck_name, chapter_name, id, edit_card) {\r\n        // db.editCard(deck_name, chapter_name, id, edit_card[\"question\"], edit_card[\"answer\"]);\r\n        console.log(id, edit_card);\r\n    }\r\n\r\n    return (\r\n      <div id='container'>\r\n        <div id='new-chapt-deck'>\r\n            <NewDeckArea onAddDeck={handleNewDeck}/>\r\n            <NewChapterArea db={db} onAddChapter={handleNewChapter}/>\r\n        </div>\r\n        <AddEditCardArea db={db} deckSelection={deckSelection} handleDeckSelect={handleDeckSelectEditAdd}/>\r\n      </div>  \r\n    );\r\n}\r\n\r\nfunction AddEditCardArea({ db, deckSelection, handleDeckSelect }) {\r\n    const [toggleBtn, setToggleBtn] = useState(false);  // false => Add Card function\r\n    const [chapterSelection, setChapterSelection] = useState(\"Chapter 1\");\r\n    const [cards, setCards] = useState(() => { db.getCards(deckSelection, chapterSelection) });\r\n    console.log(db.getCards(deckSelection, chapterSelection));\r\n\r\n    return (\r\n        <div id='edit-add'>\r\n            <div className='title-button-layout'>\r\n                <h3>Cards</h3>\r\n                {/* I think i should change this button style when i start adding states.\r\n                    Basically, I should render the left-down button classes on default load/\r\n                    on 2nd click, and 1st click i should render right-down button.\r\n\r\n                    Based on this state, I'll allow the select select-card, preload question/answer\r\n                */}\r\n                <input type='button' className='button-style-2' value={\"Add Edit\"}></input><br />\r\n            </div>\r\n            <div className='select-layout'>\r\n                <label htmlFor='deck-select'>Select Deck</label>\r\n                <select\r\n                    onChange={() => {\r\n                        // On deck select change, update the deckSelection state\r\n                        const target = document.getElementById(\"deck-select-edit-add\");\r\n                        handleDeckSelect(target.options[target.selectedIndex].value);\r\n                    }}\r\n                    id='deck-select-edit-add'\r\n                    name='deck-select'\r\n                    className='select-style'>\r\n                    {getDeckOptions(db)}\r\n                </select><br />\r\n            </div>\r\n            <div className='select-layout'>\r\n                <label htmlFor='chapter-select'>Select Chapter</label>\r\n                <select name='chapter-select' className='select-style'>\r\n                    {getChapterOptions(db, deckSelection)}\r\n                </select><br />\r\n            </div>\r\n            <div className='select-layout'>\r\n                <label htmlFor='card-select'>Select Card</label>\r\n                <select name='card-select' className='select-style'>\r\n                    <option value={0}>Card 1</option>\r\n                </select><br />\r\n            </div>\r\n            <label>Question:</label><br />\r\n            <input type='text'></input><br />\r\n            <label>Answer:</label><br />\r\n            <textarea name='answer' rows='5' cols='40'></textarea>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function AddEdit({ db }) {\r\n    return (\r\n      <>\r\n        <PageTitle />\r\n        <Content db={db}/>\r\n      </>\r\n    );  \r\n  }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}