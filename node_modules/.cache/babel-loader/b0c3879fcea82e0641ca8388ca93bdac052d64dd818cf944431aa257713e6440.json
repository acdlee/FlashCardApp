{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clsno\\\\OneDrive\\\\Desktop\\\\Learn React\\\\Flashcards\\\\src\\\\components\\\\AddEditPage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction getDeckOptions(db) {\n  const deck_options = db.getDeckNames().map((deck_name, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: deck_name,\n      children: deck_name\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this);\n  });\n  return deck_options;\n}\nfunction getChapterOptions(db, deckSelection) {\n  const chapter_options = db.getChapterNames(deckSelection).map((chapter_name, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: chapter_name,\n      children: chapter_name\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  });\n  return chapter_options;\n}\nfunction PageTitle() {\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Add/Edit\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_c = PageTitle;\nfunction NewDeckArea({\n  onAddDeck\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-button-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onClick: () => {\n          // Get the new deck name from input text\n          const id = document.getElementById('new-deck-name').value;\n          onAddDeck(id);\n        },\n        type: \"button\",\n        className: \"button-style-2\",\n        value: \"Add Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"new-deck-name\",\n      children: \"New Deck Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 66\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"new-deck-name\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 59\n    }, this)]\n  }, void 0, true);\n}\n_c2 = NewDeckArea;\nfunction NewChapterArea({\n  db,\n  onAddChapter\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"new-area\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-button-layout more-margin\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Chapter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onClick: () => {\n          // Get the new chapter name and selected deck\n          const id = document.getElementById(\"new-chapter-name\").value;\n          const target = document.getElementById(\"deck-select-new-chapt\");\n          const deck_name = target.options[target.selectedIndex].text;\n          onAddChapter(deck_name, id);\n        },\n        type: \"button\",\n        className: \"button-style-2\",\n        value: \"Add Chapter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"deck-select\",\n      children: \"Select Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"deck-select-new-chapt\",\n      name: \"deck-select\",\n      children: getDeckOptions(db)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"new-chapter-name\",\n      id: \"new-chapt-name\",\n      children: \"New Chapter Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 92\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"new-chapter-name\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 62\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_c3 = NewChapterArea;\nfunction Content({\n  db\n}) {\n  _s();\n  const [deckSelection, setDeckSelection] = useState(\"Deck 0\");\n  const [deckOptions, setDeckOptions] = useState(db.getDeckNames());\n  const [chapterOptions, setChapterOptions] = useState(db.getChapterNames(deckSelection));\n  function handleDeckSelectEditAdd(selected_deck) {\n    setDeckSelection(selected_deck);\n  }\n  function handleNewDeck(new_deck_name) {\n    // Add the new deck\n    db.addDeck(new_deck_name);\n    // Updating the state will allow select lists to see the update without page refresh\n    setDeckOptions(db.getDeckNames());\n  }\n  function handleNewChapter(deck_name, new_chapter_name) {\n    // Add the new chapter\n    db.addChapter(deck_name, new_chapter_name);\n    // Updating the state will allow select lists to see the update without page refresh\n    setChapterOptions(db.getChapterNames());\n  }\n  function handleNewCard(deck_name, chapter_name, new_card) {\n    // new card must be an object with question, answer properties\n    // db.addCard(deck_name, chapter_name, new_card);\n    console.log(new_card);\n  }\n  function handleEditCard(deck_name, chapter_name, id, edit_card) {\n    // db.editCard(deck_name, chapter_name, id, edit_card[\"question\"], edit_card[\"answer\"]);\n    console.log(id, edit_card);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"new-chapt-deck\",\n      children: [/*#__PURE__*/_jsxDEV(NewDeckArea, {\n        onAddDeck: handleNewDeck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(NewChapterArea, {\n        db: db,\n        onAddChapter: handleNewChapter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddEditCardArea, {\n      db: db,\n      deckSelection: deckSelection,\n      handleDeckSelect: handleDeckSelectEditAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 7\n  }, this);\n}\n_s(Content, \"ez74srXhWg43YkRyd2dVBufcH9g=\");\n_c4 = Content;\nfunction AddEditCardArea({\n  db,\n  deckSelection,\n  handleDeckSelect\n}) {\n  _s2();\n  const [toggleBtn, setToggleBtn] = useState(false); // false => Add Card function\n  const [chapterSelection, setChapterSelection] = useState(\"Chapter 1\");\n  const [cardOptions, setCardOptions] = useState([]);\n  const [cards, setCards] = useState([]);\n  const [display, setDisplay] = useState(\"\");\n  const [display2, setDisplay2] = useState(\"\");\n  function changeCard() {\n    setDisplay(db.getCard(deckSelection, chapterSelection, 0)[\"question\"]);\n    setDisplay2(db.getCard(deckSelection, chapterSelection, 0)[\"answer\"]);\n  }\n  async function getData() {\n    const chpt_select = document.getElementById('chapter-select');\n    const selected = chpt_select.options[chpt_select.selectedIndex];\n    setChapterSelection(selected.value);\n    const data = db.getCards(deckSelection, selected.value);\n    setCards(data);\n    const results = [];\n    // Store results in the results array\n    data.forEach(element => {\n      results.push( /*#__PURE__*/_jsxDEV(\"option\", {\n        value: element,\n        children: [\"Card \", element[\"id\"]]\n      }, \"Card \" + element[\"id\"], true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)\n      // <option key={\"Card \" + element[\"id\"]} value={element}>Card {element[\"question\"]}</option>\n      );\n    });\n    console.log(selected.value);\n    console.log(db.getCard(deckSelection, selected.value, 0)[\"question\"]);\n    setCardOptions(results);\n  }\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"edit-add\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-button-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        className: \"button-style-2\",\n        value: \"Add Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 92\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"deck-select\",\n        children: \"Select Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: () => {\n          // On deck select change, update the deckSelection state\n          const target = document.getElementById(\"deck-select-edit-add\");\n          handleDeckSelect(target.options[target.selectedIndex].value);\n          getData();\n        },\n        id: \"deck-select-edit-add\",\n        name: \"deck-select\",\n        className: \"select-style\",\n        children: getDeckOptions(db)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"chapter-select\",\n        children: \"Select Chapter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: () => {\n          getChapterOptions(db, deckSelection);\n          getData();\n        },\n        id: \"chapter-select\",\n        name: \"chapter-select\",\n        className: \"select-style\",\n        children: getChapterOptions(db, deckSelection)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"card-select\",\n        children: \"Select Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"card-select\",\n        className: \"select-style\",\n        children: cardOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Question:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: display\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 56\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Answer:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: display2,\n      name: \"answer\",\n      rows: \"5\",\n      cols: \"40\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 9\n  }, this);\n}\n_s2(AddEditCardArea, \"zhGE8cAgNFzIesTOQbBzm4fvIFs=\");\n_c5 = AddEditCardArea;\nexport default function AddEdit({\n  db\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTitle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      db: db\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c6 = AddEdit;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"PageTitle\");\n$RefreshReg$(_c2, \"NewDeckArea\");\n$RefreshReg$(_c3, \"NewChapterArea\");\n$RefreshReg$(_c4, \"Content\");\n$RefreshReg$(_c5, \"AddEditCardArea\");\n$RefreshReg$(_c6, \"AddEdit\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","getDeckOptions","db","deck_options","getDeckNames","map","deck_name","index","value","children","fileName","_jsxFileName","lineNumber","columnNumber","getChapterOptions","deckSelection","chapter_options","getChapterNames","chapter_name","PageTitle","_c","NewDeckArea","onAddDeck","className","onClick","id","document","getElementById","type","htmlFor","_c2","NewChapterArea","onAddChapter","target","options","selectedIndex","text","name","_c3","Content","_s","setDeckSelection","deckOptions","setDeckOptions","chapterOptions","setChapterOptions","handleDeckSelectEditAdd","selected_deck","handleNewDeck","new_deck_name","addDeck","handleNewChapter","new_chapter_name","addChapter","handleNewCard","new_card","console","log","handleEditCard","edit_card","AddEditCardArea","handleDeckSelect","_c4","_s2","toggleBtn","setToggleBtn","chapterSelection","setChapterSelection","cardOptions","setCardOptions","cards","setCards","display","setDisplay","display2","setDisplay2","changeCard","getCard","getData","chpt_select","selected","data","getCards","results","forEach","element","push","onChange","rows","cols","_c5","AddEdit","_c6","$RefreshReg$"],"sources":["C:/Users/clsno/OneDrive/Desktop/Learn React/Flashcards/src/components/AddEditPage.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nfunction getDeckOptions(db) {\r\n    const deck_options = db.getDeckNames().map((deck_name, index) => {\r\n        return (\r\n            <option key={index} value={deck_name}>{deck_name}</option>\r\n        );\r\n    });\r\n\r\n    return deck_options;\r\n}\r\n\r\nfunction getChapterOptions(db, deckSelection) {\r\n    const chapter_options = db.getChapterNames(deckSelection).map((chapter_name, index) => {\r\n        return (\r\n            <option key={index} value={chapter_name}>{chapter_name}</option>\r\n        );\r\n    });\r\n\r\n    return chapter_options;\r\n}\r\n\r\nfunction PageTitle() {\r\n    return (\r\n        <h2>Add/Edit</h2>\r\n    );\r\n}\r\n\r\nfunction NewDeckArea({ onAddDeck }) {\r\n    return (\r\n        <>\r\n            <div className='title-button-layout'>\r\n                <h3>Deck</h3>\r\n                <input \r\n                    onClick={() => {\r\n                        // Get the new deck name from input text\r\n                        const id = document.getElementById('new-deck-name').value;\r\n                        onAddDeck(id);\r\n                    }}\r\n                    type='button'\r\n                    className='button-style-2'\r\n                    value={\"Add Deck\"}></input>\r\n            </div>\r\n            <label htmlFor='new-deck-name'>New Deck Name:</label><br />\r\n            <input id='new-deck-name' type='text'></input><br />\r\n        </>\r\n    );\r\n}\r\n\r\nfunction NewChapterArea({ db, onAddChapter }) {\r\n    return (\r\n        <div id='new-area'>\r\n            <div className='title-button-layout more-margin'>\r\n                <h3>Chapter</h3>\r\n                <input\r\n                    onClick={() => {\r\n                        // Get the new chapter name and selected deck\r\n                        const id = document.getElementById(\"new-chapter-name\").value;\r\n                        const target = document.getElementById(\"deck-select-new-chapt\");\r\n                        const deck_name = target.options[target.selectedIndex].text;\r\n                        onAddChapter(deck_name, id);\r\n                    }}\r\n                    type='button'\r\n                    className='button-style-2'\r\n                    value={\"Add Chapter\"}></input>\r\n            </div>\r\n            <label htmlFor='deck-select'>Select Deck</label>\r\n            <select id='deck-select-new-chapt' name='deck-select'>\r\n                {getDeckOptions(db)}\r\n            </select><br />\r\n            <label htmlFor='new-chapter-name' id='new-chapt-name'>New Chapter Name:</label><br />\r\n            <input id='new-chapter-name' type='text'></input><br />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Content({ db }) {\r\n    const [deckSelection, setDeckSelection] = useState(\"Deck 0\");\r\n    const [deckOptions, setDeckOptions] = useState(db.getDeckNames());\r\n    const [chapterOptions, setChapterOptions] = useState(db.getChapterNames(deckSelection));\r\n\r\n    function handleDeckSelectEditAdd(selected_deck) {\r\n        setDeckSelection(selected_deck);\r\n    }\r\n\r\n    function handleNewDeck(new_deck_name) {\r\n        // Add the new deck\r\n        db.addDeck(new_deck_name);\r\n        // Updating the state will allow select lists to see the update without page refresh\r\n        setDeckOptions(db.getDeckNames());\r\n    }\r\n\r\n    function handleNewChapter(deck_name, new_chapter_name) {\r\n        // Add the new chapter\r\n        db.addChapter(deck_name, new_chapter_name);\r\n        // Updating the state will allow select lists to see the update without page refresh\r\n        setChapterOptions(db.getChapterNames());\r\n    }\r\n\r\n    function handleNewCard(deck_name, chapter_name, new_card) {\r\n        // new card must be an object with question, answer properties\r\n        // db.addCard(deck_name, chapter_name, new_card);\r\n        console.log(new_card);\r\n    }\r\n\r\n    function handleEditCard(deck_name, chapter_name, id, edit_card) {\r\n        // db.editCard(deck_name, chapter_name, id, edit_card[\"question\"], edit_card[\"answer\"]);\r\n        console.log(id, edit_card);\r\n    }\r\n\r\n    return (\r\n      <div id='container'>\r\n        <div id='new-chapt-deck'>\r\n            <NewDeckArea onAddDeck={handleNewDeck}/>\r\n            <NewChapterArea db={db} onAddChapter={handleNewChapter}/>\r\n        </div>\r\n        <AddEditCardArea db={db} deckSelection={deckSelection} handleDeckSelect={handleDeckSelectEditAdd}/>\r\n      </div>  \r\n    );\r\n}\r\n\r\nfunction AddEditCardArea({ db, deckSelection, handleDeckSelect }) {\r\n    const [toggleBtn, setToggleBtn] = useState(false);  // false => Add Card function\r\n    const [chapterSelection, setChapterSelection] = useState(\"Chapter 1\");\r\n    const [cardOptions, setCardOptions] = useState([]);\r\n    const [cards, setCards] = useState([]);\r\n    const [display, setDisplay] = useState(\"\");\r\n    const [display2, setDisplay2] = useState(\"\");\r\n\r\n    function changeCard() {\r\n        setDisplay(db.getCard(deckSelection, chapterSelection, 0)[\"question\"]);\r\n        setDisplay2(db.getCard(deckSelection, chapterSelection, 0)[\"answer\"]);\r\n    }\r\n\r\n    async function getData() {\r\n\r\n        const chpt_select = document.getElementById('chapter-select');\r\n        const selected = chpt_select.options[chpt_select.selectedIndex];\r\n        setChapterSelection(selected.value);\r\n\r\n        const data = db.getCards(deckSelection, selected.value);\r\n        setCards(data);\r\n        const results = [];\r\n        // Store results in the results array\r\n        data.forEach(element => {\r\n            results.push(\r\n                <option key={\"Card \" + element[\"id\"]} value={element}>Card {element[\"id\"]}</option>\r\n                // <option key={\"Card \" + element[\"id\"]} value={element}>Card {element[\"question\"]}</option>\r\n            );\r\n        });\r\n\r\n\r\n        console.log(selected.value);\r\n        console.log(db.getCard(deckSelection, selected.value, 0)[\"question\"]);\r\n        setCardOptions(results);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n\r\n    return (\r\n        <div id='edit-add'>\r\n            <div className='title-button-layout'>\r\n                <h3>Cards</h3>\r\n                {/* I think i should change this button style when i start adding states.\r\n                    Basically, I should render the left-down button classes on default load/\r\n                    on 2nd click, and 1st click i should render right-down button.\r\n\r\n                    Based on this state, I'll allow the select select-card, preload question/answer\r\n                */}\r\n                <input type='button' className='button-style-2' value={\"Add Edit\"}></input><br />\r\n            </div>\r\n            <div className='select-layout'>\r\n                <label htmlFor='deck-select'>Select Deck</label>\r\n                <select\r\n                    onChange={() => {\r\n                        // On deck select change, update the deckSelection state\r\n                        const target = document.getElementById(\"deck-select-edit-add\");\r\n                        handleDeckSelect(target.options[target.selectedIndex].value);\r\n                        getData();\r\n                    }}\r\n                    id='deck-select-edit-add'\r\n                    name='deck-select'\r\n                    className='select-style'>\r\n                    {getDeckOptions(db)}\r\n                </select><br />\r\n            </div>\r\n            <div className='select-layout'>\r\n                <label htmlFor='chapter-select'>Select Chapter</label>\r\n                <select \r\n                    onChange={() => {\r\n                        getChapterOptions(db, deckSelection);\r\n                        getData();\r\n                    }}\r\n                    id='chapter-select'\r\n                    name='chapter-select' \r\n                    className='select-style'>\r\n                    {getChapterOptions(db, deckSelection)}\r\n                </select><br />\r\n            </div>\r\n            <div className='select-layout'>\r\n                <label htmlFor='card-select'>Select Card</label>\r\n                <select name='card-select' className='select-style'>\r\n                    {cardOptions}\r\n                </select><br />\r\n            </div>\r\n            <label>Question:</label><br />\r\n            <input type='text' value={display}></input><br />\r\n            <label>Answer:</label><br />\r\n            <textarea value={display2} name='answer' rows='5' cols='40'></textarea>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function AddEdit({ db }) {\r\n    return (\r\n      <>\r\n        <PageTitle />\r\n        <Content db={db}/>\r\n      </>\r\n    );  \r\n  }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}