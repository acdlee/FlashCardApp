{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clsno\\\\OneDrive\\\\Desktop\\\\Learn React\\\\Flashcards\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction QuestionAnswerText({\n  question,\n  answer,\n  displayQuestion\n}) {\n  const displayText = displayQuestion ? question : answer;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = QuestionAnswerText;\nfunction FlipCardButton() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Flip Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c2 = FlipCardButton;\nfunction QuestionAnswerField({\n  target_card,\n  displayQuestion\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"qa-field\",\n    children: [/*#__PURE__*/_jsxDEV(QuestionAnswerText, {\n      question: target_card['question'],\n      answer: 'answer',\n      displayQuestion: displayQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlipCardButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c3 = QuestionAnswerField;\nfunction CardNav() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_c4 = CardNav;\nfunction ChapterNav() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Chapter 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c5 = ChapterNav;\nfunction Flashcard({\n  data\n}) {\n  _s();\n  const [displayQuestion, setDisplayQuestion] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flashcard\",\n    children: [/*#__PURE__*/_jsxDEV(ChapterNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuestionAnswerField, {\n      target_card: data[0],\n      displayQuestion: displayQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Flashcard, \"XVxJgvRwY/m9fS58yP8Fi4NeqOI=\");\n_c6 = Flashcard;\nconst DATA = [{\n  id: 1,\n  chapter: 1,\n  question: \"What is a training instance?\",\n  answer: \"One training iteration through all the data.\"\n}, {\n  id: 2,\n  chapter: 1,\n  question: \"Why use machine learning?\",\n  answer: \"To accomplish tasks infeasible for a human.\"\n}, {\n  id: 3,\n  chapter: 1,\n  question: \"What is machine learning?\",\n  answer: \"A computer being trained to improve at a task, by some performance measure.\"\n}];\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Flashcard, {\n      data: DATA\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c7 = App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"QuestionAnswerText\");\n$RefreshReg$(_c2, \"FlipCardButton\");\n$RefreshReg$(_c3, \"QuestionAnswerField\");\n$RefreshReg$(_c4, \"CardNav\");\n$RefreshReg$(_c5, \"ChapterNav\");\n$RefreshReg$(_c6, \"Flashcard\");\n$RefreshReg$(_c7, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","QuestionAnswerText","question","answer","displayQuestion","displayText","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","FlipCardButton","type","value","_c2","QuestionAnswerField","target_card","className","_c3","CardNav","_c4","ChapterNav","_c5","Flashcard","data","_s","setDisplayQuestion","_c6","DATA","id","chapter","App","_c7","$RefreshReg$"],"sources":["C:/Users/clsno/OneDrive/Desktop/Learn React/Flashcards/src/App.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction QuestionAnswerText({ question, answer, displayQuestion }) {\n  const displayText = displayQuestion ? question : answer;\n  \n  return (\n    <>\n      <p>{question}</p>\n    </>\n  );\n}\n\nfunction FlipCardButton() {\n  return (\n    <>\n      <input type='button' value='Flip Card'></input>\n    </>\n  );\n}\n\nfunction QuestionAnswerField({ target_card, displayQuestion }) {\n  return (\n    <div className='qa-field'>\n      <QuestionAnswerText question={target_card['question']} answer={'answer'} displayQuestion={displayQuestion} />\n      <FlipCardButton />\n    </div>\n  );\n}\n\nfunction CardNav() {\n  return (\n    <div>\n      <input type='button' value='Left'></input>\n      <input type='button' value='Right'></input>\n    </div>\n  );\n}\n\nfunction ChapterNav() {\n  return (\n    <>\n      <nav>\n        <p>Chapter 1</p>\n      </nav>\n    </>\n  );  \n}\n\nfunction Flashcard({ data }) {\n  const [displayQuestion, setDisplayQuestion] = useState(true);\n\n  return (\n    <div className='flashcard'>\n      <ChapterNav />\n      <CardNav />\n      <QuestionAnswerField target_card={data[0]} displayQuestion={displayQuestion} />\n    </div>\n  );\n}\n\nconst DATA = [\n  {id: 1, chapter: 1, question: \"What is a training instance?\", answer: \"One training iteration through all the data.\"},\n  {id: 2, chapter: 1, question: \"Why use machine learning?\", answer: \"To accomplish tasks infeasible for a human.\"},\n  {id: 3, chapter: 1, question: \"What is machine learning?\", answer: \"A computer being trained to improve at a task, by some performance measure.\"},\n];\n\nexport default function App() {\n  return ( \n    <>\n      <Flashcard data={DATA} />\n    </>);\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}