{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clsno\\\\OneDrive\\\\Desktop\\\\Learn React\\\\Flashcards\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useState } from 'react';\nimport arrow from './images/arrow.png';\nimport cross from './images/chapter_nav_cross.png';\nimport Home from './components/HomePage';\nimport AddEdit from './components/AddEditPage';\nimport { DB } from './database/database';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction QuestionAnswerText({\n  question,\n  answer,\n  displayQuestion\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: displayQuestion ? question : answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = QuestionAnswerText;\nfunction FlipCardButton({\n  onFlipCardChange\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Flip Card\",\n      className: \"button-style\",\n      onClick: onFlipCardChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c2 = FlipCardButton;\nfunction QuestionAnswerField({\n  target_card,\n  displayQuestion,\n  handleCardFlip\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"qa-field\",\n    children: [/*#__PURE__*/_jsxDEV(QuestionAnswerText, {\n      question: target_card['question'],\n      answer: target_card['answer'],\n      displayQuestion: displayQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlipCardButton, {\n      onFlipCardChange: handleCardFlip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c3 = QuestionAnswerField;\nfunction CardNav({\n  onArrowClick,\n  cardNumber\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-nav\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onClick: e => onArrowClick(e.target.id),\n      type: \"image\",\n      src: arrow,\n      id: \"Left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: cardNumber + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onClick: e => onArrowClick(e.target.id),\n      type: \"image\",\n      src: arrow,\n      id: \"Right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_c4 = CardNav;\nfunction ChapterNav({\n  db,\n  onChapterChange,\n  currentChapter,\n  data,\n  deck\n}) {\n  _s();\n  const [chapterNavState, setChapterNavState] = useState(false);\n  function handleChapterNavClick() {\n    // handle nav-slide animation\n    const menu = document.getElementById('drop-down-menu');\n    if (!menu.classList.contains('active')) {\n      // show menu\n      menu.classList.add('active');\n      menu.style.height = \"auto\";\n      let height = menu.clientHeight + 'px';\n      menu.style.height = \"0px\";\n      setTimeout(() => {\n        menu.style.height = height;\n      }, 0);\n    } else {\n      // remove menu\n      menu.style.height = \"0px\";\n      menu.classList.remove('active');\n    }\n    setChapterNavState(!chapterNavState);\n  }\n  const _chapters = db.getChapters(\"Deck 0\").map(chpt_number => {});\n  console.log(_chapters);\n  const chapters = data.map(arr => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: e => {\n          onChapterChange(e.target.innerHTML);\n          handleChapterNavClick();\n        },\n        href: \"#\",\n        children: [\"Chapter \", arr[deck]['chapter']]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this)\n    }, arr[deck]['chapter'], false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this);\n  });\n  console.log(chapters);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chapter-nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chapter-nav-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"image\",\n          src: cross,\n          className: chapterNavState ? 'chapter-nav-animation' : '',\n          onClick: () => handleChapterNavClick()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: chapterNavState ? \"Pick a chapter!\" : \"Chapter \" + (parseInt(currentChapter) + 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"drop-down-menu\",\n        children: chapters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(ChapterNav, \"cf3Y9kol/iD+ouOp25+CnTYV5PE=\");\n_c5 = ChapterNav;\nfunction Flashcard({\n  data,\n  db,\n  chapter = 0,\n  deck = 0\n}) {\n  _s2();\n  const [cardNavCounter, setCardNavCounter] = useState(0);\n  const [displayQuestion, setDisplayQuestion] = useState(true);\n  const [currentChapter, setCurrentChapter] = useState(chapter);\n  function handleCardFlip() {\n    setDisplayQuestion(!displayQuestion);\n  }\n  function handleChapterSelection(chapterString) {\n    // grab the chapter number from the string\n    let n = chapterString.lastIndexOf(' ');\n    let result = parseInt(chapterString.substring(n + 1));\n    setCurrentChapter(result - 1);\n\n    // on card change, set the card display to question\n    setDisplayQuestion(true);\n    // Reset to first card\n    setCardNavCounter(0);\n  }\n  function handleCardNav(arrowId) {\n    if (arrowId == \"Left\" && cardNavCounter > 0) {\n      setCardNavCounter(cardNavCounter - 1);\n    } else if (arrowId == \"Right\" && cardNavCounter < data[0].length - 1) {\n      setCardNavCounter(cardNavCounter + 1);\n    }\n    // on card change, set the card display to question\n    setDisplayQuestion(true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flashcard\",\n    children: [/*#__PURE__*/_jsxDEV(ChapterNav, {\n      db: db,\n      onChapterChange: handleChapterSelection,\n      currentChapter: currentChapter,\n      data: data,\n      deck: deck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardNav, {\n      onArrowClick: handleCardNav,\n      cardNumber: cardNavCounter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuestionAnswerField, {\n      target_card: data[currentChapter][cardNavCounter],\n      displayQuestion: displayQuestion,\n      handleCardFlip: handleCardFlip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n_s2(Flashcard, \"HnfdGuirt1rTmjcmB0Ipgs+pXx0=\");\n_c6 = Flashcard;\nfunction Nav({\n  onNavClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        id: \"home\",\n        onClick: e => onNavClick(e.target.id),\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        id: \"edit\",\n        onClick: e => onNavClick(e.target.id),\n        children: \"Add/Edit Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        id: \"cards\",\n        onClick: e => onNavClick(e.target.id),\n        children: \"Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n}\n_c7 = Nav;\nconst DATA = [[{\n  id: 1,\n  chapter: 1,\n  question: \"What is a training instance?\",\n  answer: \"One training iteration through all the data.\"\n}, {\n  id: 2,\n  chapter: 1,\n  question: \"Why use machine learning?\",\n  answer: \"To accomplish tasks infeasible for a human.\"\n}, {\n  id: 3,\n  chapter: 1,\n  question: \"What is machine learning?\",\n  answer: \"A computer being trained to improve at a task, by some performance measure.\"\n}], [{\n  id: 4,\n  chapter: 2,\n  question: \"What is 2+2?\",\n  answer: \"It's 4 silly!\"\n}, {\n  id: 5,\n  chapter: 2,\n  question: \"What is the integral of x squared?\",\n  answer: \"x to the third, all divided by 3... + C!\"\n}, {\n  id: 6,\n  chapter: 2,\n  question: \"Cats or dogs?\",\n  answer: \"Cats.\"\n}]];\nexport default function App() {\n  _s3();\n  const [pageDisplay, setPageDisplay] = useState(0);\n  const [displayChapter, setDisplayChapter] = useState(0);\n  const [displayDeck, setDisplayDeck] = useState(0);\n  const [db] = useState(() => new DB()); // Database - renders once\n\n  function handleStudyBtnClick(chapter, deck) {\n    // Given a chapter and deck, load the \"cards\" page with appropriate data\n    setDisplayChapter(chapter);\n    setDisplayDeck(deck);\n    setPageDisplay(1);\n  }\n  function handleNavClick(navId) {\n    if (navId == \"home\") {\n      setPageDisplay(0);\n    } else if (navId == \"cards\") {\n      setPageDisplay(1);\n    } else {\n      setPageDisplay(2);\n    }\n  }\n  function setDisplay() {\n    let display = /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 19\n    }, this); // default to home\n    if (!pageDisplay) {\n      display = /*#__PURE__*/_jsxDEV(Home, {\n        onStudyBtnClick: (chapter, deck) => handleStudyBtnClick(chapter, deck)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this);\n    } else if (pageDisplay == 1) {\n      display = /*#__PURE__*/_jsxDEV(Flashcard, {\n        data: DATA,\n        db: db,\n        chapter: displayChapter,\n        deck: displayDeck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this);\n    } else {\n      display = /*#__PURE__*/_jsxDEV(AddEdit, {\n        data: DATA\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this);\n    }\n    return display;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      onNavClick: handleNavClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"card\",\n      children: setDisplay()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n}\n_s3(App, \"NeLF93pUf69lhTYrw6L6fqJhZN4=\");\n_c8 = App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"QuestionAnswerText\");\n$RefreshReg$(_c2, \"FlipCardButton\");\n$RefreshReg$(_c3, \"QuestionAnswerField\");\n$RefreshReg$(_c4, \"CardNav\");\n$RefreshReg$(_c5, \"ChapterNav\");\n$RefreshReg$(_c6, \"Flashcard\");\n$RefreshReg$(_c7, \"Nav\");\n$RefreshReg$(_c8, \"App\");","map":{"version":3,"names":["useState","arrow","cross","Home","AddEdit","DB","jsxDEV","_jsxDEV","Fragment","_Fragment","QuestionAnswerText","question","answer","displayQuestion","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","FlipCardButton","onFlipCardChange","type","value","className","onClick","_c2","QuestionAnswerField","target_card","handleCardFlip","_c3","CardNav","onArrowClick","cardNumber","e","target","id","src","_c4","ChapterNav","db","onChapterChange","currentChapter","data","deck","_s","chapterNavState","setChapterNavState","handleChapterNavClick","menu","document","getElementById","classList","contains","add","style","height","clientHeight","setTimeout","remove","_chapters","getChapters","map","chpt_number","console","log","chapters","arr","innerHTML","href","parseInt","_c5","Flashcard","chapter","_s2","cardNavCounter","setCardNavCounter","setDisplayQuestion","setCurrentChapter","handleChapterSelection","chapterString","n","lastIndexOf","result","substring","handleCardNav","arrowId","length","_c6","Nav","onNavClick","_c7","DATA","App","_s3","pageDisplay","setPageDisplay","displayChapter","setDisplayChapter","displayDeck","setDisplayDeck","handleStudyBtnClick","handleNavClick","navId","setDisplay","display","onStudyBtnClick","_c8","$RefreshReg$"],"sources":["C:/Users/clsno/OneDrive/Desktop/Learn React/Flashcards/src/App.js"],"sourcesContent":["import { useState } from 'react'; \r\nimport arrow from './images/arrow.png';\r\nimport cross from './images/chapter_nav_cross.png'\r\nimport Home from './components/HomePage';\r\nimport AddEdit from './components/AddEditPage'\r\nimport { DB } from './database/database'\r\n\r\nfunction QuestionAnswerText({ question, answer, displayQuestion }) {  \r\n  return (\r\n    <>\r\n      <p>{displayQuestion ? question : answer}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction FlipCardButton({ onFlipCardChange }) {\r\n  return (\r\n    <>\r\n      <input \r\n        type='button'\r\n        value='Flip Card'\r\n        className='button-style'\r\n        onClick={onFlipCardChange}\r\n      ></input>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction QuestionAnswerField({ target_card, displayQuestion, handleCardFlip }) {\r\n  return (\r\n    <div className='qa-field'>\r\n      <QuestionAnswerText\r\n       question={target_card['question']}\r\n       answer={target_card['answer']}\r\n       displayQuestion={displayQuestion} />\r\n      <FlipCardButton \r\n        onFlipCardChange={handleCardFlip}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CardNav({ onArrowClick, cardNumber }) {\r\n  return (\r\n    <div className='card-nav'>\r\n      <input onClick={(e) => onArrowClick(e.target.id)} type='image' src={arrow} id='Left'></input>\r\n      <span>{cardNumber + 1}</span>\r\n      <input onClick={(e) => onArrowClick(e.target.id)} type='image' src={arrow} id='Right'></input>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ChapterNav({ db, onChapterChange, currentChapter, data, deck }) {\r\n  const [chapterNavState, setChapterNavState] = useState(false);\r\n\r\n  function handleChapterNavClick() {\r\n    // handle nav-slide animation\r\n    const menu = document.getElementById('drop-down-menu');\r\n    if (!menu.classList.contains('active')) {\r\n      // show menu\r\n      menu.classList.add('active');\r\n      menu.style.height = \"auto\";\r\n\r\n      let height = menu.clientHeight + 'px';\r\n      menu.style.height = \"0px\";\r\n\r\n      setTimeout(() => {\r\n        menu.style.height = height;\r\n      }, 0);\r\n    } else {\r\n      // remove menu\r\n      menu.style.height = \"0px\";\r\n      menu.classList.remove('active');\r\n    }\r\n    \r\n    setChapterNavState(!chapterNavState);\r\n  }\r\n\r\n  const _chapters = db.getChapters(\"Deck 0\").map((chpt_number) => {\r\n\r\n  });\r\n  console.log(_chapters);\r\n\r\n  const chapters = data.map((arr) => {\r\n    return (\r\n    <li key={arr[deck]['chapter']}>\r\n      <a \r\n      onClick={(e) => {\r\n        onChapterChange(e.target.innerHTML);\r\n        handleChapterNavClick();\r\n      }}\r\n      href='#'>Chapter {arr[deck]['chapter']}</a>\r\n    </li>);\r\n  });\r\n\r\n  console.log(chapters);\r\n\r\n  return (\r\n    <>\r\n      <div className='chapter-nav'>\r\n        <div className='chapter-nav-control'>\r\n          <input\r\n            type='image' \r\n            src={cross}\r\n            className={chapterNavState ? 'chapter-nav-animation' : ''}\r\n            onClick={() => handleChapterNavClick()}></input>\r\n          <span>{chapterNavState ? \"Pick a chapter!\" : \"Chapter \" + (parseInt(currentChapter) + 1)}</span>\r\n        </div>\r\n        <ul id='drop-down-menu'>{chapters}</ul>\r\n      </div>\r\n    </>\r\n  );  \r\n}\r\n\r\nfunction Flashcard({ data, db, chapter=0, deck=0 }) {\r\n  const [cardNavCounter, setCardNavCounter] = useState(0);\r\n  const [displayQuestion, setDisplayQuestion] = useState(true);\r\n  const [currentChapter, setCurrentChapter] = useState(chapter);\r\n\r\n  function handleCardFlip() {\r\n    setDisplayQuestion(!displayQuestion);\r\n  }\r\n\r\n  function handleChapterSelection(chapterString) {\r\n    // grab the chapter number from the string\r\n    let n = chapterString.lastIndexOf(' ');\r\n    let result = parseInt(chapterString.substring(n + 1));\r\n    setCurrentChapter(result - 1);\r\n\r\n    // on card change, set the card display to question\r\n    setDisplayQuestion(true);\r\n    // Reset to first card\r\n    setCardNavCounter(0);\r\n  }\r\n\r\n  function handleCardNav(arrowId) {\r\n    if (arrowId == \"Left\" && cardNavCounter > 0) {\r\n      setCardNavCounter(cardNavCounter - 1);\r\n    } else if (arrowId == \"Right\" && cardNavCounter < data[0].length - 1) {\r\n      setCardNavCounter(cardNavCounter + 1);\r\n    }\r\n    // on card change, set the card display to question\r\n    setDisplayQuestion(true);\r\n  }\r\n\r\n  return (\r\n    <div className='flashcard'>\r\n      <ChapterNav\r\n        db={db}\r\n        onChapterChange={handleChapterSelection}\r\n        currentChapter={currentChapter}\r\n        data={data} deck={deck}/>\r\n      <CardNav\r\n        onArrowClick={handleCardNav} \r\n        cardNumber={cardNavCounter}/>\r\n      <QuestionAnswerField \r\n        target_card={data[currentChapter][cardNavCounter]} \r\n        displayQuestion={displayQuestion} \r\n        handleCardFlip={handleCardFlip} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Nav({ onNavClick }) {\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        <li id=\"home\" onClick={(e) => onNavClick(e.target.id)}>Home</li>\r\n        <li id=\"edit\" onClick={(e) => onNavClick(e.target.id)}>Add/Edit Cards</li>\r\n        <li id=\"cards\" onClick={(e) => onNavClick(e.target.id)}>Cards</li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nconst DATA = [\r\n  [\r\n    {id: 1, chapter: 1, question: \"What is a training instance?\", answer: \"One training iteration through all the data.\"},\r\n    {id: 2, chapter: 1, question: \"Why use machine learning?\", answer: \"To accomplish tasks infeasible for a human.\"},\r\n    {id: 3, chapter: 1, question: \"What is machine learning?\", answer: \"A computer being trained to improve at a task, by some performance measure.\"},\r\n  ],\r\n  [    \r\n    {id: 4, chapter: 2, question: \"What is 2+2?\", answer: \"It's 4 silly!\"},\r\n    {id: 5, chapter: 2, question: \"What is the integral of x squared?\", answer: \"x to the third, all divided by 3... + C!\"},\r\n    {id: 6, chapter: 2, question: \"Cats or dogs?\", answer: \"Cats.\"},\r\n  ]\r\n];\r\n\r\nexport default function App() {\r\n  const [pageDisplay, setPageDisplay] = useState(0);\r\n  const [displayChapter, setDisplayChapter] = useState(0);\r\n  const [displayDeck, setDisplayDeck] = useState(0);\r\n  const [db] = useState(() => new DB());  // Database - renders once\r\n\r\n  function handleStudyBtnClick(chapter, deck) {\r\n    // Given a chapter and deck, load the \"cards\" page with appropriate data\r\n    setDisplayChapter(chapter);\r\n    setDisplayDeck(deck);\r\n    setPageDisplay(1);\r\n  }\r\n\r\n  function handleNavClick(navId) {\r\n    if (navId == \"home\") {\r\n      setPageDisplay(0);\r\n    } else if (navId == \"cards\") {\r\n      setPageDisplay(1);\r\n    } else {\r\n      setPageDisplay(2);\r\n    }\r\n  }\r\n\r\n  function setDisplay() {\r\n    let display = <Home />; // default to home\r\n    if (!pageDisplay) {\r\n      display = <Home \r\n                  onStudyBtnClick={(chapter, deck) => handleStudyBtnClick(chapter, deck)}/>;\r\n    } else if (pageDisplay == 1) {\r\n      display = <Flashcard data={DATA} db={db} chapter={displayChapter} deck={displayDeck}/>;\r\n    } else {\r\n      display = <AddEdit data={DATA}/>;\r\n    }\r\n\r\n    return display;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Nav onNavClick={handleNavClick}/>\r\n      <div id=\"card\">\r\n        {setDisplay()}\r\n      </div>\r\n    </div>);\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}