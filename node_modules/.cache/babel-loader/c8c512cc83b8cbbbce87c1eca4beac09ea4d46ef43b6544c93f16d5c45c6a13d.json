{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clsno\\\\OneDrive\\\\Desktop\\\\Learn React\\\\Flashcards\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport arrow from './images/arrow.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction QuestionAnswerText({\n  question,\n  answer,\n  displayQuestion\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: displayQuestion ? question : answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = QuestionAnswerText;\nfunction FlipCardButton({\n  onFlipCardChange\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Flip Card\",\n      onClick: onFlipCardChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c2 = FlipCardButton;\nfunction QuestionAnswerField({\n  target_card,\n  displayQuestion,\n  handleCardFlip\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"qa-field\",\n    children: [/*#__PURE__*/_jsxDEV(QuestionAnswerText, {\n      question: target_card['question'],\n      answer: target_card['answer'],\n      displayQuestion: displayQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlipCardButton, {\n      onFlipCardChange: handleCardFlip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c3 = QuestionAnswerField;\nfunction CardNav({\n  onArrowClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-nav\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onClick: e => onArrowClick(e.target.id),\n      type: \"image\",\n      src: arrow,\n      id: \"Left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onClick: e => onArrowClick(e.target.id),\n      type: \"image\",\n      src: arrow,\n      id: \"Right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_c4 = CardNav;\nfunction ChapterNav() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"chapter-nav\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Chapter 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c5 = ChapterNav;\nfunction Flashcard({\n  data\n}) {\n  _s();\n  const [cardNavCounter, setCardNavCounter] = useState(0);\n  const [displayQuestion, setDisplayQuestion] = useState(true);\n  function handleCardFlip() {\n    setDisplayQuestion(!displayQuestion);\n  }\n  function handleCardNav(arrowId) {\n    if (arrowId == \"Left\" && cardNavCounter > 0) {\n      setCardNavCounter(cardNavCounter - 1);\n    } else if (arrowId == \"Right\" && cardNavCounter < data[0].length - 1) {\n      setCardNavCounter(cardNavCounter + 1);\n    }\n    // on card change, set the card display to question\n    setDisplayQuestion(true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flashcard\",\n    children: [/*#__PURE__*/_jsxDEV(ChapterNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardNav, {\n      onArrowClick: handleCardNav\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuestionAnswerField, {\n      target_card: data[0][cardNavCounter],\n      displayQuestion: displayQuestion,\n      handleCardFlip: handleCardFlip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(Flashcard, \"tWmNG9mBRI5jw90MVhM9OoJ8Hzk=\");\n_c6 = Flashcard;\nconst DATA = [[{\n  id: 1,\n  chapter: 1,\n  question: \"What is a training instance?\",\n  answer: \"One training iteration through all the data.\"\n}, {\n  id: 2,\n  chapter: 1,\n  question: \"Why use machine learning?\",\n  answer: \"To accomplish tasks infeasible for a human.\"\n}, {\n  id: 3,\n  chapter: 1,\n  question: \"What is machine learning?\",\n  answer: \"A computer being trained to improve at a task, by some performance measure.\"\n}], [{\n  id: 4,\n  chapter: 2,\n  question: \"What is 2+2\",\n  answer: \"It's 4 silly!.\"\n}, {\n  id: 5,\n  chapter: 2,\n  question: \"What is the integral of x squared?\",\n  answer: \"x to the third, all divided by 3... + C!\"\n}, {\n  id: 6,\n  chapter: 2,\n  question: \"Cats or dogs?\",\n  answer: \"Cats.\"\n}]];\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Flashcard, {\n      data: DATA\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c7 = App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"QuestionAnswerText\");\n$RefreshReg$(_c2, \"FlipCardButton\");\n$RefreshReg$(_c3, \"QuestionAnswerField\");\n$RefreshReg$(_c4, \"CardNav\");\n$RefreshReg$(_c5, \"ChapterNav\");\n$RefreshReg$(_c6, \"Flashcard\");\n$RefreshReg$(_c7, \"App\");","map":{"version":3,"names":["useState","arrow","jsxDEV","_jsxDEV","Fragment","_Fragment","QuestionAnswerText","question","answer","displayQuestion","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","FlipCardButton","onFlipCardChange","type","value","onClick","_c2","QuestionAnswerField","target_card","handleCardFlip","className","_c3","CardNav","onArrowClick","e","target","id","src","_c4","ChapterNav","_c5","Flashcard","data","_s","cardNavCounter","setCardNavCounter","setDisplayQuestion","handleCardNav","arrowId","length","_c6","DATA","chapter","App","_c7","$RefreshReg$"],"sources":["C:/Users/clsno/OneDrive/Desktop/Learn React/Flashcards/src/App.js"],"sourcesContent":["import { useState } from 'react';\r\nimport arrow from './images/arrow.png';\r\n\r\nfunction QuestionAnswerText({ question, answer, displayQuestion }) {  \r\n  return (\r\n    <>\r\n      <p>{displayQuestion ? question : answer}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction FlipCardButton({ onFlipCardChange }) {\r\n  return (\r\n    <>\r\n      <input \r\n        type='button'\r\n        value='Flip Card'\r\n        onClick={onFlipCardChange}\r\n      >\r\n        </input>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction QuestionAnswerField({ target_card, displayQuestion, handleCardFlip }) {\r\n  return (\r\n    <div className='qa-field'>\r\n      <QuestionAnswerText\r\n       question={target_card['question']}\r\n       answer={target_card['answer']}\r\n       displayQuestion={displayQuestion} />\r\n      <FlipCardButton \r\n        onFlipCardChange={handleCardFlip}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CardNav({ onArrowClick }) {\r\n  return (\r\n    <div className='card-nav'>\r\n      <input onClick={(e) => onArrowClick(e.target.id)} type='image' src={arrow} id='Left'></input>\r\n      <span>{}</span>\r\n      <input onClick={(e) => onArrowClick(e.target.id)} type='image' src={arrow} id='Right'></input>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ChapterNav() {\r\n  return (\r\n    <>\r\n      <nav className='chapter-nav'>\r\n        <p>Chapter 1</p>\r\n      </nav>\r\n    </>\r\n  );  \r\n}\r\n\r\nfunction Flashcard({ data }) {\r\n  const [cardNavCounter, setCardNavCounter] = useState(0);\r\n  const [displayQuestion, setDisplayQuestion] = useState(true);\r\n\r\n  function handleCardFlip() {\r\n    setDisplayQuestion(!displayQuestion);\r\n  }\r\n\r\n  function handleCardNav(arrowId) {\r\n    if (arrowId == \"Left\" && cardNavCounter > 0) {\r\n      setCardNavCounter(cardNavCounter - 1);\r\n    } else if (arrowId == \"Right\" && cardNavCounter < data[0].length - 1) {\r\n      setCardNavCounter(cardNavCounter + 1);\r\n    }\r\n    // on card change, set the card display to question\r\n    setDisplayQuestion(true);\r\n  }\r\n\r\n  return (\r\n    <div className='flashcard'>\r\n      <ChapterNav />\r\n      <CardNav onArrowClick={handleCardNav} />\r\n      <QuestionAnswerField \r\n        target_card={data[0][cardNavCounter]} \r\n        displayQuestion={displayQuestion} \r\n        handleCardFlip={handleCardFlip} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst DATA = [\r\n  [\r\n    {id: 1, chapter: 1, question: \"What is a training instance?\", answer: \"One training iteration through all the data.\"},\r\n    {id: 2, chapter: 1, question: \"Why use machine learning?\", answer: \"To accomplish tasks infeasible for a human.\"},\r\n    {id: 3, chapter: 1, question: \"What is machine learning?\", answer: \"A computer being trained to improve at a task, by some performance measure.\"},\r\n  ],\r\n  [    \r\n    {id: 4, chapter: 2, question: \"What is 2+2\", answer: \"It's 4 silly!.\"},\r\n    {id: 5, chapter: 2, question: \"What is the integral of x squared?\", answer: \"x to the third, all divided by 3... + C!\"},\r\n    {id: 6, chapter: 2, question: \"Cats or dogs?\", answer: \"Cats.\"},\r\n  ]\r\n];\r\n\r\nexport default function App() {\r\n  return ( \r\n    <>\r\n      <Flashcard data={DATA} />\r\n    </>);\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}